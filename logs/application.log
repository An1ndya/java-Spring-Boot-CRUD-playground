2025-03-17 10:25:20 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 19664 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 10:25:20 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 10:25:20 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 10:25:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 10:25:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 10:25:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 10:25:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 2 JPA repository interfaces.
2025-03-17 10:25:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 10:25:21 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 10:25:21 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 10:25:21 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 10:25:21 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 10:25:21 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1143 ms
2025-03-17 10:25:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 10:25:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 10:25:21 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 10:25:21 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 10:25:21 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 10:25:21 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 10:25:22 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 10:25:22 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 10:25:22 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 10:25:23 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 10:25:23 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository and entity manager
2025-03-17 10:25:23 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 10:25:23 [restartedMain] INFO  log1 - ManagerServiceImpl initialized with repository
2025-03-17 10:25:23 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 10:25:23 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 10:25:23 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 10:25:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-17 10:25:23 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Started CrudDemoApplication in 4.035 seconds (JVM running for 4.48)
2025-03-17 10:25:23 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Starting data initialization...
2025-03-17 10:25:23 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Data already exists, skipping initialization
2025-03-17 10:25:23 [restartedMain] INFO  log1 - Running with active profile: prod
2025-03-17 10:25:23 [restartedMain] INFO  log1 - Database URL: jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
2025-03-17 10:25:23 [restartedMain] INFO  log1 - Server Port: 8080
2025-03-17 10:25:24 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-17 10:25:24 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-17 10:25:24 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-17 10:25:27 [http-nio-8080-exec-4] INFO  log1 - Fetching all employees
2025-03-17 10:25:27 [http-nio-8080-exec-4] INFO  log1 - Service: Getting all employees
2025-03-17 10:25:38 [http-nio-8080-exec-3] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 10:25:38 [http-nio-8080-exec-3] INFO  log1 - Fetching all managers
2025-03-17 10:32:24 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 10:32:24 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 2892 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 10:32:24 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 10:32:24 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 10:32:24 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 10:32:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 10:32:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 2 JPA repository interfaces.
2025-03-17 10:32:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 10:32:26 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 10:32:26 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 10:32:26 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 10:32:26 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 10:32:26 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1222 ms
2025-03-17 10:32:26 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 10:32:26 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 10:32:26 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 10:32:26 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 10:32:26 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 10:32:26 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 10:32:26 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 10:32:27 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 10:32:27 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 10:32:27 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 10:32:27 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository and entity manager
2025-03-17 10:32:27 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 10:32:27 [restartedMain] INFO  log1 - ManagerServiceImpl initialized with repository
2025-03-17 10:32:27 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 10:32:27 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 10:32:27 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 10:32:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-17 10:32:27 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Started CrudDemoApplication in 3.483 seconds (JVM running for 3.803)
2025-03-17 10:32:27 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Starting data initialization...
2025-03-17 10:32:28 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Data already exists, skipping initialization
2025-03-17 10:32:28 [restartedMain] INFO  log1 - Running with active profile: prod
2025-03-17 10:32:28 [restartedMain] INFO  log1 - Database URL: jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
2025-03-17 10:32:28 [restartedMain] INFO  log1 - Server Port: 8080
2025-03-17 10:32:32 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-17 10:32:32 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-17 10:32:32 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-03-17 10:32:32 [http-nio-8080-exec-1] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 10:32:32 [http-nio-8080-exec-1] INFO  log1 - Fetching all managers
2025-03-17 10:42:35 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m38s585ms293µs700ns).
2025-03-17 10:47:54 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 10:47:54 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 15576 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 10:47:54 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 10:47:54 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 10:47:54 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 10:47:55 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 10:47:55 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 2 JPA repository interfaces.
2025-03-17 10:47:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 10:47:55 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 10:47:55 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 10:47:55 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 10:47:56 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 10:47:56 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1207 ms
2025-03-17 10:47:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 10:47:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 10:47:56 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 10:47:56 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 10:47:56 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 10:47:56 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 10:47:56 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 10:47:56 [restartedMain] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 10:47:56 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 10:47:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-17 10:47:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-17 10:47:56 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-17 10:47:56 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-17 10:47:56 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1168)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:919)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.example.cruddemo.CrudDemoApplication.main(CrudDemoApplication.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.hibernate.cfg.Ejb3JoinColumn.checkReferencedColumnsType(Ejb3JoinColumn.java:839)
	at org.hibernate.cfg.BinderHelper.createSyntheticPropertyReference(BinderHelper.java:126)
	at org.hibernate.cfg.ToOneFkSecondPass.doSecondPass(ToOneFkSecondPass.java:104)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processEndOfQueue(InFlightMetadataCollectorImpl.java:1750)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processFkSecondPassesInOrder(InFlightMetadataCollectorImpl.java:1694)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1623)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:295)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 21 common frames omitted
2025-03-17 11:03:54 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 11:03:54 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 2944 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 11:03:54 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 11:03:54 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 11:03:54 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 11:03:55 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 11:03:55 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
2025-03-17 11:03:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 11:03:55 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 11:03:55 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 11:03:55 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 11:03:56 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 11:03:56 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1256 ms
2025-03-17 11:03:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 11:03:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 11:03:56 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 11:03:56 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 11:03:56 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 11:03:56 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 11:03:56 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 11:03:56 [restartedMain] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 11:03:56 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 11:03:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-17 11:03:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-17 11:03:56 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-17 11:03:56 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-17 11:03:56 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1168)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:919)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.example.cruddemo.CrudDemoApplication.main(CrudDemoApplication.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.hibernate.cfg.Ejb3JoinColumn.checkReferencedColumnsType(Ejb3JoinColumn.java:839)
	at org.hibernate.cfg.BinderHelper.createSyntheticPropertyReference(BinderHelper.java:126)
	at org.hibernate.cfg.ToOneFkSecondPass.doSecondPass(ToOneFkSecondPass.java:104)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processEndOfQueue(InFlightMetadataCollectorImpl.java:1750)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processFkSecondPassesInOrder(InFlightMetadataCollectorImpl.java:1694)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1623)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:295)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 21 common frames omitted
2025-03-17 11:07:39 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 11:07:39 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 7904 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 11:07:39 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 11:07:39 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 11:07:39 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 11:07:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 11:07:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
2025-03-17 11:07:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 11:07:40 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 11:07:40 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 11:07:40 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 11:07:40 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 11:07:40 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1177 ms
2025-03-17 11:07:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 11:07:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 11:07:40 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 11:07:40 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 11:07:40 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 11:07:40 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 11:07:41 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 11:07:41 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 11:07:41 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 11:07:42 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 11:07:42 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository and entity manager
2025-03-17 11:07:42 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 11:07:42 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 11:07:42 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 11:07:42 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 11:07:42 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-17 11:07:42 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Started CrudDemoApplication in 3.613 seconds (JVM running for 4.008)
2025-03-17 11:07:42 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Starting data initialization...
2025-03-17 11:07:42 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Data already exists, skipping initialization
2025-03-17 11:07:42 [restartedMain] INFO  log1 - Running with active profile: prod
2025-03-17 11:07:42 [restartedMain] INFO  log1 - Database URL: jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
2025-03-17 11:07:42 [restartedMain] INFO  log1 - Server Port: 8080
2025-03-17 11:07:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-17 11:07:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-17 11:07:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-17 11:07:52 [http-nio-8080-exec-1] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 11:07:52 [http-nio-8080-exec-1] INFO  log1 - Fetching all managers
2025-03-17 11:07:55 [http-nio-8080-exec-2] INFO  log1 - Fetching all employees
2025-03-17 11:07:55 [http-nio-8080-exec-2] INFO  log1 - Service: Getting all employees
2025-03-17 11:51:07 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=39m26s366ms480µs400ns).
2025-03-17 11:51:35 [http-nio-8080-exec-3] INFO  log1 - Fetching all employees
2025-03-17 11:51:35 [http-nio-8080-exec-3] INFO  log1 - Service: Getting all employees
2025-03-17 11:51:44 [http-nio-8080-exec-6] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 11:51:44 [http-nio-8080-exec-6] INFO  log1 - Fetching all managers
2025-03-17 11:52:01 [http-nio-8080-exec-7] INFO  c.e.c.controller.ManagerController - Creating new manager: Anindya Biswas
2025-03-17 11:52:01 [http-nio-8080-exec-7] INFO  log1 - Creating new manager: Anindya Biswas
2025-03-17 11:52:01 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [anindya.SBL123@gmail.com]
2025-03-17 11:52:01 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [Anindya]
2025-03-17 11:52:01 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [Biswas]
2025-03-17 11:52:01 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [VARCHAR] - [01721584048]
2025-03-17 11:52:01 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [NUMERIC] - [37000.0]
2025-03-17 11:53:02 [http-nio-8080-exec-5] WARN  o.s.web.servlet.PageNotFound - Request method 'PUT' not supported
2025-03-17 11:53:02 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]
2025-03-17 11:53:18 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.example.cruddemo.model.Manager` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.example.cruddemo.model.Manager` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 20] (through reference chain: com.example.cruddemo.model.Employee["manager"])]
2025-03-17 11:53:38 [http-nio-8080-exec-4] INFO  log1 - Fetching employee with ID: 1
2025-03-17 11:53:38 [http-nio-8080-exec-4] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 11:53:38 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 11:58:01 [http-nio-8080-exec-6] INFO  log1 - Fetching employee with ID: 1
2025-03-17 11:58:01 [http-nio-8080-exec-6] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 11:58:01 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 11:58:11 [http-nio-8080-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.example.cruddemo.model.Manager` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.example.cruddemo.model.Manager` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 20] (through reference chain: com.example.cruddemo.model.Employee["manager"])]
2025-03-17 12:05:29 [http-nio-8080-exec-9] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:05:29 [http-nio-8080-exec-9] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:05:29 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:05:40 [http-nio-8080-exec-5] INFO  log1 - Fetching employee with ID: 1
2025-03-17 12:05:40 [http-nio-8080-exec-5] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 12:05:40 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:06:12 [http-nio-8080-exec-1] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:06:12 [http-nio-8080-exec-1] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:06:12 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:12:37 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 12:12:37 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 10200 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 12:12:37 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 12:12:37 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 12:12:37 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 12:12:38 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 12:12:38 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 2 JPA repository interfaces.
2025-03-17 12:12:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 12:12:38 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 12:12:38 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 12:12:38 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 12:12:39 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 12:12:39 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1309 ms
2025-03-17 12:12:39 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 12:12:39 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 12:12:39 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 12:12:39 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 12:12:39 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 12:12:39 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 12:12:39 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 12:12:40 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 12:12:40 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 12:12:40 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 12:12:40 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository and entity manager
2025-03-17 12:12:40 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 12:12:40 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 12:12:40 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 12:12:40 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 12:12:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-17 12:12:40 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Started CrudDemoApplication in 3.82 seconds (JVM running for 4.229)
2025-03-17 12:12:40 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Starting data initialization...
2025-03-17 12:12:40 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Data already exists, skipping initialization
2025-03-17 12:12:40 [restartedMain] INFO  log1 - Running with active profile: prod
2025-03-17 12:12:40 [restartedMain] INFO  log1 - Database URL: jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
2025-03-17 12:12:40 [restartedMain] INFO  log1 - Server Port: 8080
2025-03-17 12:12:54 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-17 12:12:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-17 12:12:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-03-17 12:12:54 [http-nio-8080-exec-1] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:12:54 [http-nio-8080-exec-1] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:12:55 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:12:55 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.cruddemo.model.Employee.manager -> com.example.cruddemo.model.Manager; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.cruddemo.model.Employee.manager -> com.example.cruddemo.model.Manager]
2025-03-17 12:13:23 [http-nio-8080-exec-4] INFO  log1 - Fetching employee with ID: 1
2025-03-17 12:13:23 [http-nio-8080-exec-4] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 12:13:23 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:13:53 [http-nio-8080-exec-5] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:13:53 [http-nio-8080-exec-5] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:13:53 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:13:53 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.cruddemo.model.Employee.manager -> com.example.cruddemo.model.Manager; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.cruddemo.model.Employee.manager -> com.example.cruddemo.model.Manager]
2025-03-17 12:20:14 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 12:20:14 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 14240 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 12:20:14 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 12:20:14 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 12:20:14 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 12:20:15 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 12:20:15 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 2 JPA repository interfaces.
2025-03-17 12:20:16 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 12:20:16 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 12:20:16 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 12:20:16 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 12:20:16 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 12:20:16 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1300 ms
2025-03-17 12:20:16 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 12:20:16 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 12:20:16 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 12:20:16 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 12:20:16 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 12:20:16 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 12:20:16 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 12:20:17 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 12:20:17 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 12:20:17 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 12:20:17 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository, entity manager, and manager repository
2025-03-17 12:20:17 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 12:20:17 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 12:20:17 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 12:20:17 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 12:20:17 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-17 12:20:17 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Started CrudDemoApplication in 3.57 seconds (JVM running for 3.976)
2025-03-17 12:20:17 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Starting data initialization...
2025-03-17 12:20:18 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Data already exists, skipping initialization
2025-03-17 12:20:18 [restartedMain] INFO  log1 - Running with active profile: prod
2025-03-17 12:20:18 [restartedMain] INFO  log1 - Database URL: jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
2025-03-17 12:20:18 [restartedMain] INFO  log1 - Server Port: 8080
2025-03-17 12:20:21 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-17 12:20:21 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-17 12:20:21 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-17 12:20:21 [http-nio-8080-exec-1] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:20:21 [http-nio-8080-exec-1] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:20:21 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:20:21 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.Error: Unresolved compilation problem: <EOL>?The method getId() is undefined for the type Manager<EOL>]
2025-03-17 12:32:27 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 12:32:27 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 9076 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 12:32:27 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 12:32:27 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 12:32:27 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 12:32:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 12:32:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 2 JPA repository interfaces.
2025-03-17 12:32:28 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 12:32:28 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 12:32:28 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 12:32:28 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 12:32:28 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 12:32:28 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1114 ms
2025-03-17 12:32:28 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 12:32:28 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 12:32:28 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 12:32:28 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 12:32:28 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 12:32:28 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 12:32:28 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 12:32:29 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 12:32:29 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 12:32:29 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 12:32:29 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository, entity manager, and manager repository
2025-03-17 12:32:29 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 12:32:29 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 12:32:29 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 12:32:30 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 12:32:30 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-17 12:32:30 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Started CrudDemoApplication in 3.313 seconds (JVM running for 3.704)
2025-03-17 12:32:30 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Starting data initialization...
2025-03-17 12:32:30 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Data already exists, skipping initialization
2025-03-17 12:32:30 [restartedMain] INFO  log1 - Running with active profile: prod
2025-03-17 12:32:30 [restartedMain] INFO  log1 - Database URL: jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
2025-03-17 12:32:30 [restartedMain] INFO  log1 - Server Port: 8080
2025-03-17 12:32:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-17 12:32:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-17 12:32:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-03-17 12:32:52 [http-nio-8080-exec-1] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:32:52 [http-nio-8080-exec-1] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:32:52 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:32:52 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:32:52 [http-nio-8080-exec-1] ERROR c.e.c.e.ResourceNotFoundException - Resource not found exception: Manager not found with id: 1
2025-03-17 12:32:52 [http-nio-8080-exec-1] ERROR log1 - Update failed - Employee not found: Manager not found with id: 1
2025-03-17 12:32:52 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.cruddemo.exception.ResourceNotFoundException: Manager not found with id: 1]
2025-03-17 12:35:16 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 12:35:16 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 19188 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 12:35:16 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 12:35:16 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 12:35:16 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 12:35:16 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 12:35:16 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
2025-03-17 12:35:17 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 12:35:17 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 12:35:17 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 12:35:17 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 12:35:17 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 12:35:17 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1209 ms
2025-03-17 12:35:17 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 12:35:17 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 12:35:17 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 12:35:17 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 12:35:17 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 12:35:17 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 12:35:17 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 12:35:18 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 12:35:18 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 12:35:18 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 12:35:18 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository, entity manager, and manager repository
2025-03-17 12:35:18 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 12:35:18 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 12:35:18 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 12:35:19 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 12:35:19 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-03-17 12:35:19 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 12:35:19 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-17 12:35:19 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-17 12:35:19 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-03-17 12:35:19 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-17 12:35:19 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-03-17 12:35:19 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-03-17 12:35:19 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-17 12:35:19 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-03-17 12:35:19 [http-nio-8080-exec-6] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:35:19 [http-nio-8080-exec-6] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:35:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:35:19 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:35:19 [http-nio-8080-exec-6] ERROR c.e.c.e.ResourceNotFoundException - Resource not found exception: Manager not found with id: 1
2025-03-17 12:35:19 [http-nio-8080-exec-6] ERROR log1 - Update failed - Employee not found: Manager not found with id: 1
2025-03-17 12:35:19 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.cruddemo.exception.ResourceNotFoundException: Manager not found with id: 1]
2025-03-17 12:35:21 [http-nio-8080-exec-5] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:35:21 [http-nio-8080-exec-5] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:35:21 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:35:21 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:35:21 [http-nio-8080-exec-5] ERROR c.e.c.e.ResourceNotFoundException - Resource not found exception: Manager not found with id: 1
2025-03-17 12:35:21 [http-nio-8080-exec-5] ERROR log1 - Update failed - Employee not found: Manager not found with id: 1
2025-03-17 12:35:21 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.cruddemo.exception.ResourceNotFoundException: Manager not found with id: 1]
2025-03-17 12:36:16 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 12:36:16 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 11808 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 12:36:16 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 12:36:16 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 12:36:16 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 12:36:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 12:36:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 2 JPA repository interfaces.
2025-03-17 12:36:17 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 12:36:17 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 12:36:17 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 12:36:17 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 12:36:17 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 12:36:17 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1027 ms
2025-03-17 12:36:17 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 12:36:17 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 12:36:17 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 12:36:18 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 12:36:18 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 12:36:18 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 12:36:18 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 12:36:18 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 12:36:18 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 12:36:19 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 12:36:19 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository, entity manager, and manager repository
2025-03-17 12:36:19 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 12:36:19 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 12:36:19 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 12:36:19 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 12:36:19 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-03-17 12:36:19 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 12:36:19 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-17 12:36:19 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-17 12:36:19 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-03-17 12:36:19 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-17 12:36:19 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-03-17 12:36:19 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-03-17 12:36:19 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-17 12:36:19 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-03-17 12:36:41 [http-nio-8080-exec-8] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:36:41 [http-nio-8080-exec-8] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:36:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:36:41 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:36:41 [http-nio-8080-exec-8] ERROR c.e.c.e.ResourceNotFoundException - Resource not found exception: Manager not found with id: 1
2025-03-17 12:36:41 [http-nio-8080-exec-8] ERROR log1 - Update failed - Employee not found: Manager not found with id: 1
2025-03-17 12:36:41 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.cruddemo.exception.ResourceNotFoundException: Manager not found with id: 1]
2025-03-17 12:36:53 [http-nio-8080-exec-2] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:36:53 [http-nio-8080-exec-2] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:36:53 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:36:53 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:36:53 [http-nio-8080-exec-2] ERROR c.e.c.e.ResourceNotFoundException - Resource not found exception: Manager not found with id: 1
2025-03-17 12:36:53 [http-nio-8080-exec-2] ERROR log1 - Update failed - Employee not found: Manager not found with id: 1
2025-03-17 12:36:53 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.cruddemo.exception.ResourceNotFoundException: Manager not found with id: 1]
2025-03-17 12:38:54 [http-nio-8080-exec-4] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:38:54 [http-nio-8080-exec-4] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:38:54 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:38:54 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:38:54 [http-nio-8080-exec-4] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
2025-03-17 12:38:54 [http-nio-8080-exec-4] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Unknown column 'manager0_.id' in 'field list'
2025-03-17 12:38:54 [http-nio-8080-exec-4] INFO  o.h.e.i.DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.exception.SQLGrammarException: could not extract ResultSet
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:67)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:390)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:163)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:104)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4550)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4540)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:571)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:539)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:327)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1231)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1220)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:202)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2848)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2825)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2781)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2825)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3413)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3380)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy3/jdk.proxy3.$Proxy115.find(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:315)
	at jdk.proxy3/jdk.proxy3.$Proxy115.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:335)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:76)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy127.findById(Unknown Source)
	at com.example.cruddemo.service.impl.EmployeeServiceImpl.updateEmployeeFields(EmployeeServiceImpl.java:317)
	at com.example.cruddemo.service.impl.EmployeeServiceImpl.updateEmployee(EmployeeServiceImpl.java:234)
	at com.example.cruddemo.service.impl.EmployeeServiceImpl$$FastClassBySpringCGLIB$$89df4e8e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.example.cruddemo.service.impl.EmployeeServiceImpl$$EnhancerBySpringCGLIB$$700f9ad8.updateEmployee(<generated>)
	at com.example.cruddemo.controller.EmployeeController.updateEmployee(EmployeeController.java:95)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'manager0_.id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	... 126 common frames omitted
2025-03-17 12:38:54 [http-nio-8080-exec-4] ERROR log1 - Unexpected error during employee update: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet
2025-03-17 12:38:54 [http-nio-8080-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Unexpected error occurred during update.]
2025-03-17 12:39:49 [http-nio-8080-exec-6] INFO  c.e.c.controller.ManagerController - Updating manager with ID: 1 with new salary: 75000.0
2025-03-17 12:39:49 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:39:49 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
2025-03-17 12:39:49 [http-nio-8080-exec-6] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Unknown column 'manager0_.id' in 'field list'
2025-03-17 12:39:49 [http-nio-8080-exec-6] INFO  o.h.e.i.DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.exception.SQLGrammarException: could not extract ResultSet
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:67)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:390)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:163)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:104)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4550)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4540)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:571)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:539)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:327)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1231)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1220)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:202)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2848)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2825)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2781)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2825)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3413)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3380)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy3/jdk.proxy3.$Proxy115.find(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:315)
	at jdk.proxy3/jdk.proxy3.$Proxy115.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:335)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:76)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy127.findById(Unknown Source)
	at com.example.cruddemo.service.impl.ManagerServiceImpl.updateManager(ManagerServiceImpl.java:47)
	at com.example.cruddemo.service.impl.ManagerServiceImpl$$FastClassBySpringCGLIB$$1e4f801.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.example.cruddemo.service.impl.ManagerServiceImpl$$EnhancerBySpringCGLIB$$ff509711.updateManager(<generated>)
	at com.example.cruddemo.controller.ManagerController.updateManager(ManagerController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'manager0_.id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	... 125 common frames omitted
2025-03-17 12:39:49 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet]
2025-03-17 12:40:03 [http-nio-8080-exec-7] INFO  c.e.c.controller.ManagerController - Fetching manager with ID: 1
2025-03-17 12:40:03 [http-nio-8080-exec-7] INFO  log1 - Fetching manager with ID: 1
2025-03-17 12:40:03 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:40:03 [http-nio-8080-exec-7] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
2025-03-17 12:40:03 [http-nio-8080-exec-7] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Unknown column 'manager0_.id' in 'field list'
2025-03-17 12:40:03 [http-nio-8080-exec-7] INFO  o.h.e.i.DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.exception.SQLGrammarException: could not extract ResultSet
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:67)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:390)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:163)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:104)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4550)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4540)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:571)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:539)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:327)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1231)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1220)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:202)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2848)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2825)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2781)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2825)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3413)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3380)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy3/jdk.proxy3.$Proxy115.find(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:315)
	at jdk.proxy3/jdk.proxy3.$Proxy115.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:335)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:76)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy127.findById(Unknown Source)
	at com.example.cruddemo.service.impl.ManagerServiceImpl.getManagerById(ManagerServiceImpl.java:41)
	at com.example.cruddemo.service.impl.ManagerServiceImpl$$FastClassBySpringCGLIB$$1e4f801.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.example.cruddemo.service.impl.ManagerServiceImpl$$EnhancerBySpringCGLIB$$ff509711.getManagerById(<generated>)
	at com.example.cruddemo.controller.ManagerController.getManagerById(ManagerController.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'manager0_.id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	... 125 common frames omitted
2025-03-17 12:40:03 [http-nio-8080-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet]
2025-03-17 12:42:49 [http-nio-8080-exec-8] INFO  log1 - Fetching all employees
2025-03-17 12:42:49 [http-nio-8080-exec-8] INFO  log1 - Service: Getting all employees
2025-03-17 12:42:59 [http-nio-8080-exec-2] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 12:42:59 [http-nio-8080-exec-2] INFO  log1 - Fetching all managers
2025-03-17 12:42:59 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
2025-03-17 12:42:59 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Unknown column 'manager0_.id' in 'field list'
2025-03-17 12:42:59 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet]
2025-03-17 12:45:58 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 12:45:58 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 1936 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 12:45:58 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 12:45:58 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 12:45:58 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 12:45:59 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 12:45:59 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 2 JPA repository interfaces.
2025-03-17 12:46:00 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 12:46:00 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 12:46:00 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 12:46:00 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 12:46:00 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 12:46:00 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1578 ms
2025-03-17 12:46:00 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 12:46:00 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 12:46:00 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 12:46:00 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 12:46:00 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 12:46:00 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 12:46:00 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 12:46:01 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 12:46:01 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 12:46:01 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 12:46:01 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository, entity manager, and manager repository
2025-03-17 12:46:01 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 12:46:01 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 12:46:02 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 12:46:02 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 12:46:02 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-17 12:46:02 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Started CrudDemoApplication in 3.973 seconds (JVM running for 4.452)
2025-03-17 12:46:02 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Starting data initialization...
2025-03-17 12:46:02 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Data already exists, skipping initialization
2025-03-17 12:46:02 [restartedMain] INFO  log1 - Running with active profile: prod
2025-03-17 12:46:02 [restartedMain] INFO  log1 - Database URL: jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
2025-03-17 12:46:02 [restartedMain] INFO  log1 - Server Port: 8080
2025-03-17 12:46:03 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-17 12:46:03 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-17 12:46:03 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-03-17 12:46:03 [http-nio-8080-exec-1] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 12:46:03 [http-nio-8080-exec-1] INFO  log1 - Fetching all managers
2025-03-17 12:46:10 [http-nio-8080-exec-5] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 12:46:10 [http-nio-8080-exec-5] INFO  log1 - Fetching all managers
2025-03-17 12:46:16 [http-nio-8080-exec-7] INFO  c.e.c.controller.ManagerController - Fetching manager with ID: 1
2025-03-17 12:46:16 [http-nio-8080-exec-7] INFO  log1 - Fetching manager with ID: 1
2025-03-17 12:46:16 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:46:18 [http-nio-8080-exec-6] INFO  c.e.c.controller.ManagerController - Fetching manager with ID: 1
2025-03-17 12:46:18 [http-nio-8080-exec-6] INFO  log1 - Fetching manager with ID: 1
2025-03-17 12:46:18 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:46:29 [http-nio-8080-exec-4] INFO  log1 - Fetching all employees
2025-03-17 12:46:29 [http-nio-8080-exec-4] INFO  log1 - Service: Getting all employees
2025-03-17 12:46:38 [http-nio-8080-exec-2] INFO  log1 - Fetching employee with ID: 1
2025-03-17 12:46:38 [http-nio-8080-exec-2] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 12:46:38 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:47:09 [http-nio-8080-exec-8] INFO  log1 - Updating employee with ID: 1
2025-03-17 12:47:09 [http-nio-8080-exec-8] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 12:47:09 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:47:09 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 12:47:09 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [john.doe@example.com]
2025-03-17 12:47:09 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [John]
2025-03-17 12:47:09 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [Doe]
2025-03-17 12:47:09 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [BIGINT] - [1]
2025-03-17 12:47:09 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [555-123-4567]
2025-03-17 12:47:09 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [Software Engineer]
2025-03-17 12:47:09 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DOUBLE] - [75000.0]
2025-03-17 12:47:09 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [1]
2025-03-17 13:00:59 [http-nio-8080-exec-3] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:00:59 [http-nio-8080-exec-3] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:00:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:00:59 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:00:59 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$Rx3S0nmK["hibernateLazyInitializer"])]
2025-03-17 13:01:10 [http-nio-8080-exec-5] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:01:10 [http-nio-8080-exec-5] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:01:10 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:01:10 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:01:10 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$Rx3S0nmK["hibernateLazyInitializer"])]
2025-03-17 13:03:05 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 9232 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 13:03:05 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 13:03:05 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 13:03:05 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 13:03:05 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 13:03:06 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 13:03:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 136 ms. Found 2 JPA repository interfaces.
2025-03-17 13:03:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 13:03:08 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 13:03:08 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 13:03:08 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 13:03:08 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 13:03:08 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2534 ms
2025-03-17 13:03:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 13:03:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 13:03:08 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 13:03:08 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 13:03:09 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 13:03:09 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 13:03:09 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 13:03:09 [restartedMain] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 13:03:09 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 13:03:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-17 13:03:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-17 13:03:09 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-17 13:03:09 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-17 13:03:09 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1168)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:919)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.example.cruddemo.CrudDemoApplication.main(CrudDemoApplication.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.hibernate.cfg.Ejb3JoinColumn.checkReferencedColumnsType(Ejb3JoinColumn.java:839)
	at org.hibernate.cfg.BinderHelper.createSyntheticPropertyReference(BinderHelper.java:126)
	at org.hibernate.cfg.ToOneFkSecondPass.doSecondPass(ToOneFkSecondPass.java:104)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processEndOfQueue(InFlightMetadataCollectorImpl.java:1750)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processFkSecondPassesInOrder(InFlightMetadataCollectorImpl.java:1694)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1623)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:295)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 21 common frames omitted
2025-03-17 13:06:53 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 13:06:53 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 14460 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 13:06:53 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 13:06:53 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 13:06:53 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 13:06:54 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 13:06:54 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 101 ms. Found 2 JPA repository interfaces.
2025-03-17 13:06:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 13:06:55 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 13:06:55 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 13:06:55 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 13:06:55 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 13:06:55 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1331 ms
2025-03-17 13:06:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 13:06:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 13:06:55 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 13:06:55 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 13:06:55 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 13:06:55 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 13:06:55 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 13:06:55 [restartedMain] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 13:06:55 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 13:06:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-17 13:06:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-17 13:06:55 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-17 13:06:55 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-17 13:06:55 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1168)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:919)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.example.cruddemo.CrudDemoApplication.main(CrudDemoApplication.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.hibernate.cfg.Ejb3JoinColumn.checkReferencedColumnsType(Ejb3JoinColumn.java:839)
	at org.hibernate.cfg.BinderHelper.createSyntheticPropertyReference(BinderHelper.java:126)
	at org.hibernate.cfg.ToOneFkSecondPass.doSecondPass(ToOneFkSecondPass.java:104)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processEndOfQueue(InFlightMetadataCollectorImpl.java:1750)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processFkSecondPassesInOrder(InFlightMetadataCollectorImpl.java:1694)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1623)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:295)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 21 common frames omitted
2025-03-17 13:07:38 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 13:07:38 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 15688 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 13:07:38 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 13:07:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 13:07:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 13:07:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 13:07:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
2025-03-17 13:07:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 13:07:40 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 13:07:40 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 13:07:40 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 13:07:40 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 13:07:40 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1259 ms
2025-03-17 13:07:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 13:07:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 13:07:40 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 13:07:40 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 13:07:40 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 13:07:40 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 13:07:40 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 13:07:40 [restartedMain] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 13:07:40 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 13:07:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-17 13:07:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-17 13:07:40 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-17 13:07:40 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-17 13:07:40 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1168)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:919)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.example.cruddemo.CrudDemoApplication.main(CrudDemoApplication.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.hibernate.cfg.Ejb3JoinColumn.checkReferencedColumnsType(Ejb3JoinColumn.java:839)
	at org.hibernate.cfg.BinderHelper.createSyntheticPropertyReference(BinderHelper.java:126)
	at org.hibernate.cfg.ToOneFkSecondPass.doSecondPass(ToOneFkSecondPass.java:104)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processEndOfQueue(InFlightMetadataCollectorImpl.java:1750)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processFkSecondPassesInOrder(InFlightMetadataCollectorImpl.java:1694)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1623)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:295)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 21 common frames omitted
2025-03-17 13:09:49 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 13:09:49 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 11864 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 13:09:49 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 13:09:49 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 13:09:49 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 13:09:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 13:09:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 2 JPA repository interfaces.
2025-03-17 13:09:51 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 13:09:51 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 13:09:51 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 13:09:51 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 13:09:51 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 13:09:51 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1302 ms
2025-03-17 13:09:51 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 13:09:51 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 13:09:51 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 13:09:51 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 13:09:51 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 13:09:51 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 13:09:51 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 13:09:52 [restartedMain] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 13:09:52 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
2025-03-17 13:09:52 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-17 13:09:52 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-17 13:09:52 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-17 13:09:52 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-17 13:09:52 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1168)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:919)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:409)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1289)
	at com.example.cruddemo.CrudDemoApplication.main(CrudDemoApplication.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.hibernate.MappingException: Unable to find column with logical name: id in org.hibernate.mapping.Table(managers) and its related supertables and secondary tables
	at org.hibernate.cfg.Ejb3JoinColumn.checkReferencedColumnsType(Ejb3JoinColumn.java:839)
	at org.hibernate.cfg.BinderHelper.createSyntheticPropertyReference(BinderHelper.java:126)
	at org.hibernate.cfg.ToOneFkSecondPass.doSecondPass(ToOneFkSecondPass.java:104)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processEndOfQueue(InFlightMetadataCollectorImpl.java:1750)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processFkSecondPassesInOrder(InFlightMetadataCollectorImpl.java:1694)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1623)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:295)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 21 common frames omitted
2025-03-17 13:13:20 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 13:13:20 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 9196 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 13:13:20 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 13:13:21 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 13:13:21 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 13:13:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 13:13:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 2 JPA repository interfaces.
2025-03-17 13:13:22 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 13:13:22 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 13:13:22 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 13:13:22 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 13:13:22 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 13:13:22 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1284 ms
2025-03-17 13:13:22 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 13:13:22 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 13:13:22 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 13:13:22 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 13:13:22 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 13:13:22 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 13:13:22 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 13:13:23 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 13:13:23 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 13:13:23 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 13:13:23 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository, entity manager, and manager repository
2025-03-17 13:13:23 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 13:13:23 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 13:13:24 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 13:13:24 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 13:13:24 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-17 13:13:24 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Started CrudDemoApplication in 3.992 seconds (JVM running for 4.414)
2025-03-17 13:13:24 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Starting data initialization...
2025-03-17 13:13:24 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Data already exists, skipping initialization
2025-03-17 13:13:24 [restartedMain] INFO  log1 - Running with active profile: prod
2025-03-17 13:13:24 [restartedMain] INFO  log1 - Database URL: jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
2025-03-17 13:13:24 [restartedMain] INFO  log1 - Server Port: 8080
2025-03-17 13:13:24 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-17 13:13:24 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-17 13:13:24 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-03-17 13:13:24 [http-nio-8080-exec-1] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:13:24 [http-nio-8080-exec-1] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:13:24 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:13:24 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:13:24 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$zttmuBVP["hibernateLazyInitializer"])]
2025-03-17 13:13:42 [http-nio-8080-exec-4] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:13:42 [http-nio-8080-exec-4] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:13:42 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:13:42 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:13:42 [http-nio-8080-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$zttmuBVP["hibernateLazyInitializer"])]
2025-03-17 13:13:48 [http-nio-8080-exec-6] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 13:13:48 [http-nio-8080-exec-6] INFO  log1 - Fetching all managers
2025-03-17 13:14:21 [http-nio-8080-exec-7] INFO  log1 - Updating employee with ID: 1
2025-03-17 13:14:21 [http-nio-8080-exec-7] INFO  log1 - Service: Attempting to update employee with ID: 1
2025-03-17 13:14:21 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:14:21 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:14:30 [http-nio-8080-exec-8] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:14:30 [http-nio-8080-exec-8] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:14:30 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:14:30 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:14:30 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$zttmuBVP["hibernateLazyInitializer"])]
2025-03-17 13:16:38 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 13:16:38 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 10236 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 13:16:38 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 13:16:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 13:16:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 13:16:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 13:16:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 2 JPA repository interfaces.
2025-03-17 13:16:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 13:16:40 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 13:16:40 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 13:16:40 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 13:16:40 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 13:16:40 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1311 ms
2025-03-17 13:16:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 13:16:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 13:16:40 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 13:16:40 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 13:16:40 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 13:16:40 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 13:16:40 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 13:16:41 [http-nio-8080-exec-5] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:16:41 [http-nio-8080-exec-5] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:16:41 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:41 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:41 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$zttmuBVP["hibernateLazyInitializer"])]
2025-03-17 13:16:41 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 13:16:41 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 13:16:41 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 13:16:41 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository, entity manager, and manager repository
2025-03-17 13:16:41 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 13:16:41 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 13:16:41 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 13:16:42 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 13:16:42 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-03-17 13:16:42 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 13:16:42 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-17 13:16:42 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-17 13:16:42 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-03-17 13:16:42 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-03-17 13:16:42 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-03-17 13:16:42 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8080"]
2025-03-17 13:16:42 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-03-17 13:16:42 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-03-17 13:16:45 [http-nio-8080-exec-3] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:16:45 [http-nio-8080-exec-3] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:16:45 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:45 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:45 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$zttmuBVP["hibernateLazyInitializer"])]
2025-03-17 13:16:46 [http-nio-8080-exec-6] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:16:46 [http-nio-8080-exec-6] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:16:46 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:46 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:46 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$zttmuBVP["hibernateLazyInitializer"])]
2025-03-17 13:16:48 [http-nio-8080-exec-2] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:16:48 [http-nio-8080-exec-2] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:16:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:48 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:48 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$zttmuBVP["hibernateLazyInitializer"])]
2025-03-17 13:16:49 [http-nio-8080-exec-9] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:16:49 [http-nio-8080-exec-9] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:16:49 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:49 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:49 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$zttmuBVP["hibernateLazyInitializer"])]
2025-03-17 13:16:57 [http-nio-8080-exec-5] INFO  log1 - Fetching all employees
2025-03-17 13:16:57 [http-nio-8080-exec-5] INFO  log1 - Service: Getting all employees
2025-03-17 13:16:57 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:16:57 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager$HibernateProxy$zttmuBVP["hibernateLazyInitializer"])]
2025-03-17 13:20:20 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 13:20:20 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 15680 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 13:20:20 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 13:20:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 13:20:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 13:20:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 13:20:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 2 JPA repository interfaces.
2025-03-17 13:20:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 13:20:21 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 13:20:21 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 13:20:21 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 13:20:21 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 13:20:21 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1327 ms
2025-03-17 13:20:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 13:20:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 13:20:21 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 13:20:21 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 13:20:22 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 13:20:22 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 13:20:22 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 13:20:22 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 13:20:23 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 13:20:23 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 13:20:23 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository, entity manager, and manager repository
2025-03-17 13:20:23 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 13:20:23 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 13:20:23 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 13:20:23 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 13:20:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-17 13:20:23 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Started CrudDemoApplication in 3.88 seconds (JVM running for 4.3)
2025-03-17 13:20:23 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Starting data initialization...
2025-03-17 13:20:23 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Data already exists, skipping initialization
2025-03-17 13:20:23 [restartedMain] INFO  log1 - Running with active profile: prod
2025-03-17 13:20:23 [restartedMain] INFO  log1 - Database URL: jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
2025-03-17 13:20:23 [restartedMain] INFO  log1 - Server Port: 8080
2025-03-17 13:20:25 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-17 13:20:25 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-17 13:20:25 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-03-17 13:20:25 [http-nio-8080-exec-2] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 13:20:25 [http-nio-8080-exec-2] INFO  log1 - Fetching all managers
2025-03-17 13:20:25 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:20:25 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"])]
2025-03-17 13:20:28 [http-nio-8080-exec-1] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 13:20:28 [http-nio-8080-exec-1] INFO  log1 - Fetching all managers
2025-03-17 13:20:28 [http-nio-8080-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:20:28 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"])]
2025-03-17 13:20:29 [http-nio-8080-exec-3] INFO  c.e.c.controller.ManagerController - Fetching all managers
2025-03-17 13:20:29 [http-nio-8080-exec-3] INFO  log1 - Fetching all managers
2025-03-17 13:20:29 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:20:29 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"])]
2025-03-17 13:20:40 [http-nio-8080-exec-4] INFO  log1 - Fetching all employees
2025-03-17 13:20:40 [http-nio-8080-exec-4] INFO  log1 - Service: Getting all employees
2025-03-17 13:20:40 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:20:40 [http-nio-8080-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["salary"])]
2025-03-17 13:20:41 [http-nio-8080-exec-5] INFO  log1 - Fetching all employees
2025-03-17 13:20:41 [http-nio-8080-exec-5] INFO  log1 - Service: Getting all employees
2025-03-17 13:20:41 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:20:41 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"])]
2025-03-17 13:20:42 [http-nio-8080-exec-7] INFO  log1 - Fetching all employees
2025-03-17 13:20:42 [http-nio-8080-exec-7] INFO  log1 - Service: Getting all employees
2025-03-17 13:20:42 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:20:42 [http-nio-8080-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"])]
2025-03-17 13:20:50 [http-nio-8080-exec-9] INFO  log1 - Fetching all employees
2025-03-17 13:20:50 [http-nio-8080-exec-9] INFO  log1 - Service: Getting all employees
2025-03-17 13:20:50 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:20:50 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"])]
2025-03-17 13:21:06 [http-nio-8080-exec-10] INFO  c.e.c.controller.ManagerController - Fetching manager with ID: 1
2025-03-17 13:21:06 [http-nio-8080-exec-10] INFO  log1 - Fetching manager with ID: 1
2025-03-17 13:21:06 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:21:06 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.cruddemo.model.Employee["manager"]->com.example.cruddemo.model.Manager["employees"])]
2025-03-17 13:25:20 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-03-17 13:25:20 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Starting CrudDemoApplication using Java 17.0.12 on DESKTOP-0BBIV6G with PID 18780 (E:\55234\Java sprint boot and hibernate DB crud project\target\classes started by Hp in E:\55234\Java sprint boot and hibernate DB crud project)
2025-03-17 13:25:20 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - The following 1 profile is active: "prod"
2025-03-17 13:25:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-17 13:25:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-17 13:25:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-17 13:25:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 2 JPA repository interfaces.
2025-03-17 13:25:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-03-17 13:25:21 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-17 13:25:21 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-17 13:25:21 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-03-17 13:25:21 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-17 13:25:21 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1275 ms
2025-03-17 13:25:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-17 13:25:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-17 13:25:21 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true'
2025-03-17 13:25:22 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-17 13:25:22 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-03-17 13:25:22 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-03-17 13:25:22 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-03-17 13:25:23 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-03-17 13:25:23 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-17 13:25:23 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - DataInitializer initialized with repository
2025-03-17 13:25:23 [restartedMain] INFO  log1 - EmployeeServiceImpl initialized with repository, entity manager, and manager repository
2025-03-17 13:25:23 [restartedMain] INFO  c.e.c.controller.EmployeeController - EmployeeController initialized with service
2025-03-17 13:25:23 [restartedMain] INFO  c.e.c.controller.ManagerController - ManagerController initialized with service
2025-03-17 13:25:23 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-17 13:25:23 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-17 13:25:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-03-17 13:25:23 [restartedMain] INFO  c.e.cruddemo.CrudDemoApplication - Started CrudDemoApplication in 3.845 seconds (JVM running for 4.324)
2025-03-17 13:25:23 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Starting data initialization...
2025-03-17 13:25:23 [restartedMain] INFO  c.e.cruddemo.config.DataInitializer - Data already exists, skipping initialization
2025-03-17 13:25:23 [restartedMain] INFO  log1 - Running with active profile: prod
2025-03-17 13:25:23 [restartedMain] INFO  log1 - Database URL: jdbc:mysql://localhost:3306/employee_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
2025-03-17 13:25:23 [restartedMain] INFO  log1 - Server Port: 8080
2025-03-17 13:25:24 [http-nio-8080-exec-5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-17 13:25:24 [http-nio-8080-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-17 13:25:24 [http-nio-8080-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-03-17 13:25:24 [http-nio-8080-exec-5] INFO  c.e.c.controller.ManagerController - Fetching manager with ID: 1
2025-03-17 13:25:24 [http-nio-8080-exec-5] INFO  log1 - Fetching manager with ID: 1
2025-03-17 13:25:24 [http-nio-8080-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:25:25 [http-nio-8080-exec-6] INFO  c.e.c.controller.ManagerController - Fetching manager with ID: 1
2025-03-17 13:25:25 [http-nio-8080-exec-6] INFO  log1 - Fetching manager with ID: 1
2025-03-17 13:25:25 [http-nio-8080-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:25:26 [http-nio-8080-exec-4] INFO  c.e.c.controller.ManagerController - Fetching manager with ID: 1
2025-03-17 13:25:26 [http-nio-8080-exec-4] INFO  log1 - Fetching manager with ID: 1
2025-03-17 13:25:26 [http-nio-8080-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:25:30 [http-nio-8080-exec-2] INFO  log1 - Fetching all employees
2025-03-17 13:25:31 [http-nio-8080-exec-2] INFO  log1 - Service: Getting all employees
2025-03-17 13:25:31 [http-nio-8080-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:25:43 [http-nio-8080-exec-3] INFO  log1 - Fetching employee with ID: 1
2025-03-17 13:25:43 [http-nio-8080-exec-3] INFO  log1 - Service: Getting employee with ID: 1
2025-03-17 13:25:43 [http-nio-8080-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:26:00 [http-nio-8080-exec-7] INFO  log1 - Fetching employee with ID: 2
2025-03-17 13:26:00 [http-nio-8080-exec-7] INFO  log1 - Service: Getting employee with ID: 2
2025-03-17 13:26:00 [http-nio-8080-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2025-03-17 13:26:53 [http-nio-8080-exec-8] INFO  log1 - Updating employee with ID: 2
2025-03-17 13:26:53 [http-nio-8080-exec-8] INFO  log1 - Service: Attempting to update employee with ID: 2
2025-03-17 13:26:53 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:26:53 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2025-03-17 13:26:53 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [VARCHAR] - [jane.smith@example.com]
2025-03-17 13:26:53 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [2] as [VARCHAR] - [Jane]
2025-03-17 13:26:53 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [3] as [VARCHAR] - [Smith]
2025-03-17 13:26:53 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [4] as [BIGINT] - [1]
2025-03-17 13:26:53 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [5] as [VARCHAR] - [555-987-6543]
2025-03-17 13:26:53 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [6] as [VARCHAR] - [Project Manager]
2025-03-17 13:26:53 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [7] as [DOUBLE] - [85000.0]
2025-03-17 13:26:53 [http-nio-8080-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [8] as [BIGINT] - [2]
2025-03-17 13:27:04 [http-nio-8080-exec-9] INFO  log1 - Updating employee with ID: 2
2025-03-17 13:27:04 [http-nio-8080-exec-9] INFO  log1 - Service: Attempting to update employee with ID: 2
2025-03-17 13:27:04 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
2025-03-17 13:27:04 [http-nio-8080-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [2]
2025-03-17 13:27:54 [http-nio-8080-exec-10] INFO  c.e.c.controller.ManagerController - Fetching manager with ID: 1
2025-03-17 13:27:54 [http-nio-8080-exec-10] INFO  log1 - Fetching manager with ID: 1
2025-03-17 13:27:54 [http-nio-8080-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
